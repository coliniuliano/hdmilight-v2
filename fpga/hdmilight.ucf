##################################################################################
## BPC3003_2.03+.ucf
##
## Author: Jack Gassett
##
## Details: http://gadgetforge.gadgetfactory.net/gf/project/butterfly_one/
##
## Contains assignment and iostandard information for
## all used pins as well as timing and area constraints for Papilio One 2.03 and higher boards. Papilio One boards started using 32Mhz oscillators at version 2.02 and above.
##
##################################################################################

## Prohibit the automatic placement of pins that are connected to VCC or GND for configuration.
#?CONFIG PROHIBIT=P144;
#?CONFIG PROHIBIT=P69;
#?CONFIG PROHIBIT=P60;

# Crystal Clock - use 32MHz onboard oscillator
NET "CLK" LOC = "A10" | IOSTANDARD = LVTTL | PERIOD = 31.25ns;

# RS232
NET "RX"  LOC = "M10" | IOSTANDARD = LVTTL | DRIVE=8 | SLEW=FAST;
NET "TX"  LOC = "P11" | IOSTANDARD = LVTTL | DRIVE=8 | SLEW=FAST;

# Unused
#NET "ADV_AP" LOC = "P114" | IOSTANDARD = LVTTL;
#NET "ADV_SCLK" LOC = "E6" | IOSTANDARD = LVTTL;
#NET "ADV_LRCLK" LOC = "P116" | IOSTANDARD = LVTTL;
#NET "ADV_MCLK" LOC = "C6" | IOSTANDARD = LVTTL;

NET "ADV_SCL" LOC = "N5" | IOSTANDARD = LVCMOS33;
NET "ADV_SDA" LOC = "P4" | IOSTANDARD = LVCMOS33;
NET "ADV_INT1" LOC = "D6" | IOSTANDARD = LVCMOS33;
NET "ADV_RST" LOC = "M6" | IOSTANDARD = LVCMOS33;

NET "ADV_HS" LOC = "B15" | IOSTANDARD = LVTTL;
NET "ADV_VS" LOC = "E13" | IOSTANDARD = LVTTL;
NET "ADV_DE" LOC = "B16" | IOSTANDARD = LVTTL;
NET "ADV_LLC" LOC = "J13" | IOSTANDARD = LVCMOS25;

NET "ADV_P<0>" LOC = "C15" | IOSTANDARD = LVCMOS25;
NET "ADV_P<1>" LOC = "C16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<2>" LOC = "D14" | IOSTANDARD = LVCMOS25;
NET "ADV_P<3>" LOC = "D16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<4>" LOC = "E15" | IOSTANDARD = LVCMOS25;
NET "ADV_P<5>" LOC = "E16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<6>" LOC = "F15" | IOSTANDARD = LVCMOS25;
NET "ADV_P<7>" LOC = "F16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<8>" LOC = "G11" | IOSTANDARD = LVCMOS25;
NET "ADV_P<9>" LOC = "F12" | IOSTANDARD = LVCMOS25;
NET "ADV_P<10>" LOC = "F14" | IOSTANDARD = LVCMOS25;
NET "ADV_P<11>" LOC = "F13" | IOSTANDARD = LVCMOS25;
NET "ADV_P<12>" LOC = "G16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<13>" LOC = "G14" | IOSTANDARD = LVCMOS25;
NET "ADV_P<14>" LOC = "H15" | IOSTANDARD = LVCMOS25;
NET "ADV_P<15>" LOC = "H16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<16>" LOC = "G12" | IOSTANDARD = LVCMOS25;
NET "ADV_P<17>" LOC = "H11" | IOSTANDARD = LVCMOS25;
NET "ADV_P<18>" LOC = "H13" | IOSTANDARD = LVCMOS25;
NET "ADV_P<19>" LOC = "H14" | IOSTANDARD = LVCMOS25;
NET "ADV_P<20>" LOC = "J14" | IOSTANDARD = LVCMOS25;
NET "ADV_P<21>" LOC = "J16" | IOSTANDARD = LVCMOS25;
NET "ADV_P<22>" LOC = "J11" | IOSTANDARD = LVCMOS25;
NET "ADV_P<23>" LOC = "J12" | IOSTANDARD = LVCMOS25;

NET "OUTPUT<0>" LOC = "E12" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
# TODO - Colin - Consider multiple outputs
#?NET "OUTPUT<1>" LOC = "P132" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<2>" LOC = "P133" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<3>" LOC = "P134" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<4>" LOC = "P127" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<5>" LOC = "P126" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<6>" LOC = "P124" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;
#?NET "OUTPUT<7>" LOC = "P123" | IOSTANDARD = LVTTL | DRIVE = 2 | SLEW = SLOW;

NET FLASH_CS LOC="T3"  | IOSTANDARD=LVTTL | DRIVE=8 | SLEW=FAST;
NET FLASH_CK LOC="R11"  | IOSTANDARD=LVTTL | DRIVE=8 | SLEW=FAST;
NET FLASH_SI LOC="T10"  | IOSTANDARD=LVTTL | DRIVE=8 | SLEW=FAST;
NET FLASH_SO LOC="P10"  | IOSTANDARD=LVTTL | DRIVE=8 | SLEW=FAST | PULLUP;

# TODO - Colin - What's the default IO directions for the IC?
NET "GPIO<0>" LOC = "T8" | IOSTANDARD = LVCMOS33; # SW2
NET "GPIO<1>" LOC = "R7" | IOSTANDARD = LVCMOS33; # SW3
NET "GPIO<2>" LOC = "T9" | IOSTANDARD = LVCMOS33; # LED1
NET "GPIO<3>" LOC = "R9" | IOSTANDARD = LVCMOS33; # LED3

NET "ADV_LLC" TNM_NET = "ADV_LLC";
TIMESPEC "TS_ADV_LLC" = PERIOD "ADV_LLC" 6 ns HIGH 50%;
NET "ADV_P<0>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<1>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<2>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<3>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<4>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<5>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<6>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<7>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<8>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<9>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<10>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<11>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<12>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<13>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<14>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<15>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<16>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<17>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<18>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<19>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<20>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<21>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<22>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;
NET "ADV_P<23>" OFFSET = IN 2.7 ns VALID 3.5 ns BEFORE "ADV_LLC" RISING;

NET "ambilight/hscale4/COUNT(0)" TNM_NET = "MC_GRP_FFS";
TIMESPEC "TS_MC_GRP_FFS" = FROM "MC_GRP_FFS" TO "MC_GRP_FFS" TS_ADV_LLC*2;
#NET "ambilight/hscale4/COUNT(0)" TNM_NET = RAMS "MC_GRP_RAMS";
#TIMESPEC "TS_MC_GRP_RAMS" = FROM "MC_GRP_RAMS" TO "MC_GRP_RAMS" TS_ADV_LLC*2;
